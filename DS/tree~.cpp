#include<iostream>
#include<stack>
#include<map>
using namespace std;

/*
 * 트리
 * 1. 연결 그래프이다(컴포넌트가 하나이다)
 * 2. 방향을 무시하였을 때, 사이클이 존재하지 않는다
 * 3. 트리의 간선 개수는 반드시 트리의 정점 개수보다 1 작다
 *
 * 루트 노드(root node): 가장 상위의 노드
 * 깊이(depth) or 레벨(level): 루트 노드와의 거리(0 or 1)
 * 높이(height): 가장 깊은 노드의 깊이 or 그에 1을 더한 값
 * 부모 노드(parent): 서로 인접한 두 정점 중 깊이가 작은 쪽
 * 자식 노드(child): 서로 인접한 두 정점 중 깊이가 큰 쪽
 * 조상 노드(ancestor): 거리가 2이상 차이 나는 관계에서 깊이가 작은 쪽
 * 자손 노드(descendant): 거리가 2이상 차이 나는 관계에서 깊이가 큰 쪽
 * 형제 노드(sibling): 같은 부모 노드를 둔 서로 다른 자식 노드들
 * 리프 노드(leaf): 자식이 하나도 없는 노
 * 루트 노드를 제외한 모든 노드는 부모 노드와 이어진 간선을 1개 갖는다
 * 부분 트리(subtree): 트리 속에 포함되어있는 또 다른 트리,
 *   어떤 트리의 자식들은 그 자체가 어떤 부분 트리의 루트가 될 수 있다.
 *   즉, 트리는 재귀적인 구조를 띈다(DP, 분할 정복에 적합)
 *
 * 그래프이기 때문에 정점, 간선, 차수 용어도 사용 할 수 있다
 * 차수(degree): 자신의 자식의 수
 */

int main() {

}